import matplotlib.pyplot as plt
import pdb
import numpy as np


#颜色gr
a=[1351,9297,6093,2776,2806,25518,1514,10263,10182,1233,2576,6379,5176,1807,1526,6861,18239,1126,13169,14929,12886,15267,7728,4381,1074]
#颜色Gr
b=[1346,9256,6456,2705,2785,25554,1528,10084,10047,1187,2506,6198,5136,1755,1512,6713,18265,1082,13066,15127,13303,15188,7663,4333,1083]

'''
# b = [802,320,299,281,267,3575,9171,4614,10905,1689,2188,3371,1515,1574,1587,1193,303,295,286,277,3566,2288,1335,1774,1667,2792,1387,29156,10657,21444,762,309,304,285,290,11863,17476,2696,4220,2100,15696,1085,2969,14352,17518,625,310,289,297,289,28865,27353,1102,8522,57452,59536,1741,16144,12961,25317,3971,335,303,302,314,16919,5231,677,2617,17467,16976,2117,6136,1719,7231,5360,400,321,306,307,14847,31808,1728,65184,19431,41564,2320,7452,18264,18510,5261,2060,335,297,300,9981,38613,19228,32243,32229,22485,1605,4376,16332,20860,4386,1928,361,323,304,8862,19118,36103,40132,35067,10848,4712,2453,4790,12634,5337,3015,877,1425,320,11124,16274,30960,41464,13483,3910,4034,1727,1212,3365,14246,4591,630,1375,5504,6464,11687,2562,4327,4987,3098,2493,2036,1167,2550,3274,5393,489,1733,5256,2334,1722,1958,20961,7107,4755,1984,2417,1340,1924,3509,1226,1772,2226,3731,6912,2798,2545,12698,2462,2746,4336,2141,3496,3054,3141,1784,1642,1116,617,6769,22021,16919,14337,3294,2592,4039,5890,3360,5138,1274,1980,1503,1302,633,1124,8669,11978,3859,3038,3221,2408,2628,4612,6633,3280,1167,1139,835,696,964,2383,13200,5390,8837,2569,1810,1415,2059,5085]
plt.plot(a)
plt.plot(b)
plt.show()

a = np.array(a)
b = np.array(b)

a = a/np.max(a)
b = b/np.max(b)
c = a-b
# print(a)
# print(b)
# print(c)
print(np.sum(c))
'''

# a = np.array(a)
# b = np.array(b)

# a = a/np.max(a)
# b = b/np.max(b)




def cos_sim(vector_a, vector_b):
    """
    计算两个向量之间的余弦相似度
    :param vector_a: 向量 a
    :param vector_b: 向量 b
    :return: sim
    """
    vector_a = np.mat(vector_a)
    vector_b = np.mat(vector_b)
    num = float(vector_a * vector_b.T)
    denom = np.linalg.norm(vector_a) * np.linalg.norm(vector_b)
    cos = num / denom
    sim = 0.5 + 0.5 * cos
    return sim

vector1 = a
vector2 = b

# op7=np.dot(vector1,vector2)/(np.linalg.norm(vector1)*(np.linalg.norm(vector2)))
print( cos_sim( vector1, vector2 ) )